>>>>>Team(Anugrah)<<<<<<

--SUB Query

--find patients who had  an appoinment BETWEEN '2024-08-10' AND '2024-08-14'

--SELECT * FROM Patients;
SELECT Name FROM Patients WHERE PatientId  IN(SELECT PatientId FROM Appointments WHERE Date BETWEEN '2024-08-10' AND '2024-08-14');



--LIST ALL DOCTORS WHO HAVE SCHEDULED APPOINTMENTS


--SELECT * FROM Users;
--SELECT * FROM Appointments;


SELECT 
    Username AS DoctorName
FROM 
    Users
WHERE 
    Role = 'doctor' AND UserId IN (SELECT DoctorId FROM Appointments);

--Get the number of unread notifications for each user.

SELECT 
    Username,
    (SELECT COUNT(*) FROM Notifications WHERE Notifications.UserId = Users.UserId AND IsRead = 0) AS UnreadNotifications
FROM 
    Users;

    --using GROUP BY

SELECT 
    Username, COUNT(*)  
    FROM Users INNER JOIN Notifications ON Users.UserId = Notifications.UserId
    WHERE isRead = 0 GROUP BY Username;
    

--List All Appointments with Patient and Doctor Details:

--Question: Write a query to list all appointments along with the patient's name, doctor's name, and the appointment date and time.
--Expected Output Columns: AppointmentId, PatientName, DoctorName, Date, Time


SELECT 
    a.AppointmentId,
    p.Name AS PatientName,
    u.Username AS DoctorName,
    a.Date,
    a.Time
FROM 
    Appointments a
    JOIN Patients p ON a.PatientId = p.PatientId
    JOIN Users u ON a.DoctorId = u.UserId;


--TO GET A LIST OF APPOINNTMENTS ALONG WITH PATIENT NAME


-- INNER JOIN KEY WORD SELECTS RECORDS THAT HAVE MATCHING VALUES IN BOTH TABLES.
-- LEFT INNER JOIN RETURNS ALL RECORDS FROM THE LEFT TABLES ALONG WITH MATCHING RECORD
-- RIGTH INNER JOIN RETURNS ALL RECORDS FROM THE RIGHT TABLES ALONG WITH MATCHING RECORD

SELECT 
    Appointments.AppointmentId,
    Patients.Name AS PatientName,
    Appointments.Date,
    Appointments.Time,
    Appointments.Reason,
    Appointments.Status
FROM 
    Appointments
INNER JOIN 
    Patients ON Appointments.PatientId = Patients.PatientId;

    --TO GET A LIST OF PATIENT NAME WITHOUT APPOINTMENT


    SELECT 
    Appointments.AppointmentId,
    Patients.Name AS PatientName,
    Appointments.Date,
    Appointments.Time,
    Appointments.Reason,
    Appointments.Status
FROM 
    Patients
LEFT JOIN 
    Appointments ON Patients.PatientId = Appointments.PatientId;


   -- Write a query to list EHR integration logs along with the patient's name.


SELECT 
    p.Name AS PatientName,
    e.EHRSystem,
    e.Operation
FROM 
    Patients p
    JOIN EHR_IntegrationLogs e ON p.PatientId = e.PatientId;

----------------------------------------------------------------------------------------------------------

IF NOT EXISTS (
		SELECT * FROM sys.tables WHERE name = 'student'
)
BEGIN
CREATE TABLE student (
	id INT PRIMARY KEY IDENTITY,
	first_name NVARCHAR(50) NOT NULL,
	last_name NVARCHAR(50 ) NOT NULL,
	email NVARCHAR(100) NOT NULL UNIQUE,
)
END

--SELECT * FROM student

--or you can choose below method

IF OBJECT_ID('dbo.subject') IS NULL
BEGIN
	CREATE TABLE [subject](
		id INT PRIMARY KEY IDENTITY,
		[name] NVARCHAR(100) NOT NULL UNIQUE
		)
END

IF OBJECT_ID('dbo.mark') IS NULL
BEGIN
	CREATE TABLE mark(
		id INT PRIMARY KEY IDENTITY,
		student_id INT NOT NULL,
		subject_id INT NOT NULL,
		mark INT NOT NULL,
		CONSTRAINT FK_Student FOREIGN KEY (student_id) REFERENCES student(id),
		CONSTRAINT FK_Subject FOREIGN KEY (subject_id) REFERENCES subject(id))
END

INSERT INTO student (first_name, last_name, email)
VALUES
('John','Doe', 'john.doe@example.com'),
('jane', 'smith' ,'jane.smoth@example.com'),
('Michael', 'Brown', 'micheal.brown@example.com');

INSERT INTO dbo.mark (student_id, subject_id, mark)
VALUES
(1, 1, 85),
(1,2,78),
(1,3,90),
(2,1,88),
(2,2,92),
(2,3,87),
(3,1,75),
(3,2,80),
(3,3,85);

INSERT INTO subject (name)
VALUES
('mathematics'),
('physics'),
('chemistry');

SELECT * FROM student
SELECT * FROM subject
SELECT * FROM mark

SELECT student.id, student.first_name, student.last_name, mark.mark, mark.subject_id FROM student
INNER JOIN mark
ON student.id = mark.student_id;

SELECT
	student.id AS student_id,
	mark.id AS mark_id,
	student.first_name,
	student.last_name,
	mark.mark,
	mark.subject_id
FROM student 
INNER JOIN mark
ON student_id = mark.student_id;


SELECT
	student.id AS student_id,
	mark.id AS mark_id,
	student.first_name,
	student.last_name,
	mark.mark,
	mark.subject_id,
	subject.name
FROM student
INNER JOIN mark ON student.id = mark.student_id
INNER JOIN subject ON mark.subject_id = subject.id;
